
Guidance from Quartr — Supabase + Conflict Viewer (Setup Guide)
===============================================================

0) Prereqs
- Quartr login (email/password)
- OpenAI API key
- Supabase project

1) Supabase setup (SQL)
In Supabase → SQL Editor, run:
---------------------------------------------------
create table if not exists earnings_files (
  id bigserial primary key,
  ticker text not null,
  year int not null,
  quarter text not null,          -- 'Q1'..'Q4'
  file_type text not null,        -- 'press_release' | 'presentation' | 'transcript' | 'guidance_json'
  file_format text not null,      -- 'pdf' | 'text' | 'json'
  storage_path text,              -- e.g., 'pdfs/AAPL/2025-Q2/press_release.pdf'
  source_url text,
  text_content text,              -- extracted text or JSON text
  created_at timestamptz default now(),
  updated_at timestamptz default now(),
  unique (ticker, year, quarter, file_type, file_format)
);
create index if not exists ix_lookup on earnings_files(ticker, file_type, file_format, year desc, quarter);
---------------------------------------------------

(Optional) Persist conflict choices:
---------------------------------------------------
create table if not exists guidance_resolved (
  id bigserial primary key,
  ticker text not null,
  year int not null,
  quarter text not null,
  metric_key text not null,
  chosen_json text not null,
  created_at timestamptz default now(),
  updated_at timestamptz default now(),
  unique (ticker, year, quarter, metric_key)
);
create index if not exists ix_resolved on guidance_resolved(ticker, year desc, quarter);
---------------------------------------------------

2) Storage rules (Option A: anon writes limited to our prefix)
In SQL Editor:
---------------------------------------------------
create policy "public read earnings"
on storage.objects for select
to public
using (bucket_id = 'earnings');

create policy "anon insert earnings"
on storage.objects for insert
to anon
with check (bucket_id = 'earnings' and name like 'pdfs/%');

create policy "anon update earnings"
on storage.objects for update
to anon
using (bucket_id = 'earnings')
with check (bucket_id = 'earnings');
---------------------------------------------------

3) Streamlit Cloud → Secrets
---------------------------------------------------
QUARTR_EMAIL="you@example.com"
QUARTR_PASSWORD="yourpassword"
OPENAI_API_KEY="sk-..."
SUPABASE_URL="https://<your-project>.supabase.co"
SUPABASE_ANON_KEY="<your-anon-key>"
SUPABASE_BUCKET="earnings"
HEADLESS="1"
SLOW_MO_MS="150"
---------------------------------------------------

4) Deploy (GitHub → Streamlit)
- Push all files/folders to a new GitHub repo
- On share.streamlit.io → New app
  • Repo: your repo
  • Branch: main
  • Main file: streamlit_app.py

5) Use
- Load Data tab: Backfill (idempotent; organizes PDFs under pdfs/TICKER/YEAR-QUARTER/)
- Guidance tab: Run extraction → Build merged view → Resolve conflicts → Finalize & Download CSV
